So we started with the basic symtable.cc, we started by adding the basic
insert, remove, push, pop, and find method to the SymbolTable. Ontop of that
we needed to keep track of the keywords continue and break to acheive this
we add flags breakable, and continue as well as setters and getters
to determine if those keywords can be declared. We would call get setters
within the scope of while, for, and before and after the SwitchStmt. We did
not manage to use the MyStack class probably because of our implementation.


Then we implemented checks for VarDecl and FnDecl. VarDecl was relatively simple
were we would just insert into the SymbolTable. As for FnDecl we inserted the
function declaration then went to check each formal and the body by wrapping it around a new
scope.

Next in ast_stmt we had a lot of trouble with the flow control as well as expressions
require for those. We ended up struggling trying to get too much to work at the
same time that we had to redo most of it just before the deadline because
we ended up getting tons of segfaults and bus errors. Eventually, we just ignored
ast_expr and worked on ast_stmt while commenting out anything expr related.
We believe we got most of the follow control working, but the expressions was a
big part thats still missing.

This is also were we would handle much of the errors but we pretty much ran
out of time and we had to revert to the lastest working commit because
ast_expr was also giving us segfaults and bus errors. We suspect an issue
with dynamic_cast for VarExpr when called from ArrayAccess. Overall, we tried
our best, but unfortunately we couldn't finish.
